{"version":3,"sources":["components/BlogToggle.js","components/BlogDetails.js","components/User.js","components/Message.js","components/BlogForm.js","components/Togglable.js","components/BadMessage.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["BlogToggle","props","useState","visible","setVisible","buttonLabel","setButtonLabel","hideWhenVisible","display","showWhenVisible","toggle","style","padding","paddingLeft","border","borderWidth","marginBottom","blog","title","author","onClick","className","children","BlogDetails","url","likes","function","user","function2","User","name","Message","message","BlogForm","handleSubmit","handleTitleChange","handleAuthorChange","handleUrlChange","onSubmit","type","value","onChange","placeholder","Togglable","React","forwardRef","ref","toggleVisibility","useImperativeHandle","BadMessage","baseUrl","token","create","newBlog","a","config","headers","Authorization","axios","post","response","data","update","put","id","deleteBlog","delete","exportedObjects","getAll","get","then","setToken","newToken","login","credentials","console","log","App","username","setUsername","blogs","setBlogs","setUser","password","setPassword","newMessage","setMessage","setTitle","setAuthor","setUrl","badMessage","setBadMessage","noteFormRef","useRef","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","addBlog","current","newBlogs","concat","likeBlog","map","x","confirm","filter","target","removeItem","toString","sort","b","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49267a73.chunk.js","sourcesContent":["import React, { useState} from 'react'\n\n\nconst BlogToggle = ((props) => {\n\n  const blogStyle = {\n    padding: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  \n\n\n  const [visible, setVisible] = useState(false)\n  const [buttonLabel, setButtonLabel] = useState(\"view\")\n \n\n  const hideWhenVisible = { display: visible ? 'none' : '' } //display arvo on none jos ei haluta et komponentti nÃ¤kyy\n  const showWhenVisible = { display: visible ? '' : 'none' }\n  \n \n    const toggle = () => {\n      setVisible(!visible)\n      visible === false ? setButtonLabel(\"hide\") : setButtonLabel(\"view\")\n      // props.buttonLabel === \"view\" ? props.buttonLabel = \"hide\" : props.buttonLabel = \"view\"\n    }\n\n\n  \n    return (\n      <div style={blogStyle}>\n        <div style={hideWhenVisible}>\n          <p> {props.blog.title} {props.blog.author}\n           <button onClick={toggle}>{buttonLabel}</button>\n          </p>   \n        </div>\n        <div style={showWhenVisible} className=\"content\">\n        <p> {props.blog.title} {props.blog.author}\n           <button onClick={toggle}>{buttonLabel}</button>\n          </p>  \n          {props.children}\n        </div>\n      </div>\n    )\n  })\n \n\nexport default BlogToggle","import React from 'react'\n\n\nconst BlogDetails = (props) => {\n    return (\n   <div>\n       <p>{props.url}</p>\n       <p> Likes {props.likes} <button onClick={()=>props.function(props.blog)}>Like</button> </p> \n       <p>{props.user}</p>\n       <button onClick={()=>props.function2(props.blog)}>Delete blog</button>\n   </div>\n    )\n\n}\n\nexport default BlogDetails","import React from 'react'\n\n\nconst User = (props) => {\n    if (props.user !== null) {\n        return (\n        <div>\n        <p>{props.user.name} is logged in <button onClick = {()=>props.function()}> Log out </button></p>\n        </div>\n        )\n    }\n}\n\n\nexport default User","import React from 'react'\n\nconst Message = (props) => {\n    \nif (props.message !== null && props.message !== '') {\n    return (\n      <div className=\"message\">\n         <p>{props.message}</p>\n     </div>\n    )\n}  else {\n    return(\n      <div className = \"nothing\">\n      <p>{props.message}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default Message","import PropTypes from 'prop-types'\n\nconst BlogForm = ({\n    handleSubmit,\n    handleTitleChange,\n    handleAuthorChange,\n    handleUrlChange,\n    title,\n    author,\n    url\n    }) => {\n      \n\n      return (\n    <form onSubmit={handleSubmit}>\n       <div>\n        title:\n          <input\n          type=\"text\"\n          value={title}\n          name=\"title\"\n          onChange={handleTitleChange}\n          placeholder='write title'\n          />\n       </div>\n       <div>\n        author\n          <input\n          type=\"text\"\n          value={author}\n          name=\"author\"\n          onChange={handleAuthorChange}\n          placeholder='write author'\n        />\n      </div>\n      <div>\n        url\n          <input\n          type=\"text\"\n          value={url}\n          name=\"url\"\n          onChange={handleUrlChange}\n          placeholder='write url'\n        />\n      </div>\n      <button type=\"submit\">create</button>\n    </form>  \n    )\n\n   }\n\n  BlogForm.propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n    handleTitleChange: PropTypes.func.isRequired,\n    handleAuthorChange: PropTypes.func.isRequired,\n    handleUrlChange: PropTypes.func.isRequired,\n    title: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  }\n  \n  export default BlogForm","import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\n\nconst Togglable = React.forwardRef((props, ref) => { \n    const [visible, setVisible] = useState(false)\n  \n    const hideWhenVisible = { display: visible ? 'none' : '' } //display arvo on none jos ei haluta et komponentti nÃ¤kyy\n    const showWhenVisible = { display: visible ? '' : 'none' }\n  \n\n\n    const toggleVisibility = () => {\n      setVisible(!visible)\n    }\n\n    useImperativeHandle(ref, () => {\n        return {\n          toggleVisibility\n        }\n      })\n    \n  \n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n        </div>\n        <div style={showWhenVisible}>\n          {props.children}\n          <button onClick={toggleVisibility}>cancel</button>\n        </div>\n      </div>\n    )\n  })\n\n  Togglable.propTypes = {\n    buttonLabel: PropTypes.string.isRequired\n  }\n\n  export default Togglable","import React from 'react'\n\nconst BadMessage = (props) => {\n    \nif (props.message !== null && props.message !== '') {\n    return (\n      <div className=\"badmessage\">\n         <p>{props.message}</p>\n     </div>\n    )\n}  else {\n    return(\n      <div className = \"nothing\">\n      <p>{props.message}</p>\n      </div>\n    )\n  }\n\n}\n\nexport default BadMessage","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\n\nconst create = async newBlog => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newBlog, config)\n  return response.data\n\n}\n\nconst update = async (blog, newBlog) => {\n  const response = await axios.put(`${baseUrl}/${blog.id}`, newBlog)\n  return response.data\n}\n\nconst deleteBlog = async blog => {\n  const config = {\n    headers : { Authorization: token },\n  }\n  return axios.delete(`${baseUrl}/${blog.id}`, config)\n}\n\n\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst exportedObjects = {\n  getAll,\n  setToken,\n  create,\n  update,\n  deleteBlog\n}\n\nexport default exportedObjects;","import axios from 'axios'\nconst baseUrl = '/api/login'\n\n\nconst login = async credentials => {\n  console.log(credentials)\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n  }\n  \n  export default {login }","import React, { useState, useEffect, useRef } from 'react'\nimport BlogToggle from './components/BlogToggle'\nimport BlogDetails from './components/BlogDetails'\nimport User from './components/User'\nimport Message from './components/Message'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport BadMessage from './components/BadMessage'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('') \n  const [blogs, setBlogs] = useState([])\n  const [user, setUser] = useState(null)\n  const [password, setPassword] = useState('') \n  const [newMessage, setMessage] = useState('')\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [badMessage, setBadMessage] = useState('')\n\n\nconsole.log(10)\n  const noteFormRef = useRef()\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )  \n  }, [])\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n      console.log(user)\n    }\n  }, [])\n\n\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogUser')\n    setUser(null)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    const credentials = {username, password}\n    \n    try {\n      const user = await loginService.login(credentials)\n\n      window.localStorage.setItem(\n        'loggedBlogUser', JSON.stringify(user)\n      ) \n      setUser(user)\n      blogService.setToken(user.token)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setBadMessage('wrong username or password')\n     setTimeout(() => {\n        setBadMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    noteFormRef.current.toggleVisibility()\n    const blog = {\n      \"author\" : author,\n      \"title\" : title,\n      \"url\" : url\n\n    }\n    const response = await blogService.create(blog)\n    const newBlogs = blogs.concat(response)\n    setBlogs(newBlogs)\n    console.log(blogs)\n    setMessage(`A new blog '${response.title}' added    `)\n    setTimeout(() => {\n       setMessage(null)\n     }, 5000)\n\n    }\n\n    const likeBlog = async (blog) => {\n      const newBlog = {\n        \"author\" : blog.author,\n        \"title\" : blog.title,\n        \"url\" : blog.url,\n        \"likes\" : blog.likes + 1 \n      }\n      newBlog.id = blog.id\n      const response = await blogService.update(blog, newBlog)\n      setBlogs(blogs.map(x => x.id !== blog.id ? x : response))\n\n    }\n\n    const deleteBlog = async (blog) => {\n      if ((window.confirm(`Delete blog ${blog.title}?`))) {\n        await blogService.deleteBlog(blog)\n        setBlogs(blogs.filter(x => x.id !== blog.id))\n     }\n    }\n   \n\n    const blogForm = () => (\n      <Togglable buttonLabel=\"create new blog\" ref={noteFormRef}>\n        <BlogForm\n          title={title}\n          author={author}\n          url = {url}\n          handleTitleChange={({ target }) => setTitle(target.value)}\n          handleAuthorChange={({ target }) => setAuthor(target.value)}\n          handleUrlChange={({ target }) => setUrl(target.value)}\n          handleSubmit={addBlog}\n        />\n      </Togglable>\n    )\n\n  const loginForm = () => (\n    <div>\n    <h2>Log in</h2>\n    <BadMessage message = {badMessage}/>\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>   \n    </div>   \n  )\n\n;\n\n\nif (user === null) {\n  return (\n    loginForm()\n  )\n}\n  return (\n    <div>\n     <Message message = {newMessage}/>\n      <h2>blogs</h2>\n      <User user={user} function={logOut} />\n     {blogForm()}\n     <br></br>\n        {blogs.filter(blog=>blog.user.toString() === user.id.toString()).sort((a, b) => b.likes - a.likes).map(blog =>\n          <BlogToggle key={blog.id} blog={blog}>\n             <BlogDetails key = {blog.id} blog = {blog} url = {blog.url} likes ={blog.likes} user= {user.name} function = {likeBlog} function2 = {deleteBlog}/>\n          </BlogToggle>\n          )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}