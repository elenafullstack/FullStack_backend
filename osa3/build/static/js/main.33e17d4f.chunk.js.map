{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getPersons","axios","get","updatePersons","newPerson","post","deletePerson","person","delete","id","updatePerson","put","then","response","data","BadError","props","message","className","Error","Empty","array","length","Person","name","number","onClick","function","FilterForm","type","value","onChange","placeholder","PersonForm","disable","console","log","value2","onSubmit","addFunction","onChange2","disabled","App","useState","persons","setPersons","useEffect","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","newError","setError","newTimeout","setNewTimeout","otherTimeout","setOtherTimeout","badError","setBadError","filterNames","deleteSomeone","window","confirm","newPersons","filter","x","clearTimeout","setTimeout","toLowerCase","includes","class","event","target","preventDefault","nameObject","already","old","map","catch","error","undefined","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33e17d4f.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl ='/api/persons'\n\n\nconst getPersons = () => {\n   return axios.get(baseUrl)\n}\n\nconst updatePersons = (newPerson) => {\n   return axios.post(baseUrl, newPerson)\n}\n\nconst deletePerson = (person) => {\n \n   return axios.delete(`${baseUrl}/${person.id}`)\n  \n\n}\n\n\nconst updatePerson = (person, newPerson) => {\n   const request=  axios.put(`${baseUrl}/${person.id}`, newPerson)\n   return request.then(response => response.data)\n   \n\n}\n\nconst personService =  { getPersons, updatePersons, deletePerson, updatePerson}\n\nexport default personService","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport './App.css';\n\n\nconst BadError = (props) => {\n  if (props.message !== null && props.message !== '') {\n    return (\n      <div className = \"baderror\">\n     <p>{props.message}</p>\n     </div>\n    )\n}  else {\n  return(\n    <div className = \"nothing\">\n    <p>{props.message}</p>\n    </div>\n  )\n}\n}\n\nconst Error = (props) => {\n\n  if (props.message !== null && props.message !== '') {\n return (\n   <div className = \"error\">\n  <p>{props.message}</p>\n  </div>\n )\n  } else {\n    return(\n      <div className = \"nothing\">\n      <p>{props.message}</p>\n      </div>\n    )\n  }\n}\n\nconst Empty = (props) => {\n  if (props.array.length == 0 ) {\n    return (\n      <div>\n        <p>\n          No numbers\n        </p>\n      </div>\n    )\n    } else {\n      return (\n        <>\n        </>\n      )\n    }\n  }\n\nconst Person = (props) => {\n\n return (\n     <div> <p> {props.person.name}\t&nbsp;&nbsp;&nbsp;{props.person.number}</p> <button onClick = {()=>props.function(props.person)}> Delete </button> </div>\n )\n}\n\nconst FilterForm = (props) => {\n  return (\n  <form>\n    <h2>Filter shown with:</h2> <input type=\"text\"value={props.value} onChange = {props.onChange} placeholder=\"Type filter...\"/>\n  </form>\n  )\n}\n\nconst PersonForm = (props) => {\n\n  let disable = true\n\nconsole.log(props.value)\nconsole.log(props.value2)\n\n  if (props.value !== '' && props.value2 !== '') {\n    disable = false\n  }\n\n  {console.log(disable)}\n    \n  return (\n    <form onSubmit={props.addFunction}> \n       <h2>Add a new contact</h2>\n          <div> <span>Name:</span> <input type=\"text\"value={props.value} onChange={props.onChange} placeholder=\"Type name...\"/></div>\n          \n          <div><span>Number:</span><input type=\"tel\"value={props.value2} onChange={props.onChange2} placeholder=\"Type number...\"/>  </div>\n          <button type=\"submit\" disabled={disable} id=\"btn\" >Add contact</button>\n    </form>\n\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState ([])\n      \n  \n\n  const hook = () => {\n    personService.getPersons()\n    .then(response => {\n      setPersons(response.data)\n    \n    })\n   \n    \n  \n  }\n\n  useEffect(hook, [])\n\n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [newError, setError] = useState('')\n  const [newTimeout, setNewTimeout] = useState('')\n  const [otherTimeout, setOtherTimeout] = useState('')\n  const [badError, setBadError] = useState('')\n\n  let filterNames=persons\n  \n \n  \n\n  const callTimeout = (timeout) => {\n      return timeout\n    }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n   \n\n\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n\n\n   \n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n   \n  }\n\nconst addPerson = (event) => {\n  event.preventDefault()\n\n  const nameObject = {\n  name: newName,\n  number: newNumber\n  }\n\n  const already = persons.filter(x => x.name === newName)\n\n\n  if(already.length === 1) {\n\n    const old = already[0]\n    if ( window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      personService.updatePerson(old,nameObject).then(response => {\n      response !== null ?  setPersons(persons.map(x => x.id !== old.id ? x : response)) :  new Error(response)\n        setNewTimeout(clearTimeout(newTimeout))\n        setError(`${newName}'s number is updated`)\n        setNewTimeout(setTimeout(() => { setError(null) }, 5000))\n        callTimeout(newTimeout)\n        }).\n        \n        catch(error=>{\n          if (error.response !== undefined) {\n            setOtherTimeout(clearTimeout(otherTimeout))\n            setBadError(`${error.response.data}`)\n              setOtherTimeout(setTimeout(() => {setBadError(null) }, 5000))\n              callTimeout(otherTimeout)\n          } else {\n            const newPersons = persons.filter(x => x.id !== old.id)  \n            setPersons(newPersons)\n            console.log(newPersons)\n            console.log(persons)\n            setOtherTimeout(clearTimeout(otherTimeout))\n            setBadError(`Information of ${nameObject.name} has already been removed from the server`)\n            setOtherTimeout(setTimeout(() => {setBadError(null) }, 5000))\n            callTimeout(otherTimeout)\n          }  \n              \n        })\n\n    }\n    }  else {\n\n        personService.updatePersons(nameObject)\n        .then(response => {\n        setPersons(persons.concat(response.data))\n        setNewName('')\n        setNewNumber('')\n        setNewTimeout(clearTimeout(newTimeout))\n        setError(`${newName} is added to the phonebook!`)\n        setNewTimeout(setTimeout(() => { setError(null) }, 5000))\n        callTimeout(newTimeout)\n    \n\n        }).catch(error=> {\n          setNewTimeout(clearTimeout(newTimeout))\n           setBadError(`${error.response.data}`)\n            setOtherTimeout(setTimeout(() => {setBadError(null) }, 5000))\n            callTimeout(newTimeout)\n\n        })\n\n    }\n}\n\n\n  const deleteSomeone = (person) => {\n    if ((window.confirm(`Delete ${person.name}?`))) {\n      personService.deletePerson(person).then(response=>response.data)\n      const newPersons = persons.filter(x => x.id !== person.id)  \n      setPersons(newPersons)\n      console.log(persons)\n      setNewTimeout(clearTimeout(newTimeout))\n      setError( `${person.name} is deleted from the phonebook!`)\n      setNewTimeout(setTimeout(() => { setError(null)}, 5000))\n      callTimeout(newTimeout)\n    }  \n   \n  }\n\n newFilter !== \"\" ? filterNames = persons.filter(x => x.name.toLowerCase().includes(newFilter.toLowerCase())) : filterNames=persons\n\n\n\n  return (\n\n  \n  \n    <body>\n    <h2 class=\"title\">PHONEBOOK</h2>\n\n    <h3 class=\"titletext\">\n      In this application you can add, update and delete contacts for phonebook. The phone number must be at least 8 characters long and the name must have at least 3 letters. If you want to update the number of a contact, it is done by adding the contact again to the phonebook with a different number. This makes the application to ask you if you wish to update the contact\n    </h3>\n  \n  \n      <div class=\"container1\">\n\n\n        <div>\n          <div>\n            <FilterForm value = {newFilter} onChange = {handleFilterChange}/>\n          </div>\n          <PersonForm addFunction = {addPerson} value={newName} onChange = {handleNameChange} value2 = {newNumber} onChange2= {handleNumberChange} />\n          <Error message = {newError}/>\n        </div>\n\n\n        <div>\n          <h2>Numbers</h2> \n          <div class=\"numbers\">\n            <div>\n              <Empty array = {filterNames}/>\n              {filterNames.map(x=> <Person key= {x.name} person = {x} function = {deleteSomeone}/>)}\n            </div>\n          </div>\n            <BadError message = {badError}/>\n        </div>\n\n\n      </div>\n\n      <footer>\n        <h3> © Elena Rima 2023</h3>\n      </footer>\n\n    </body>\n  )\n\n  \n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}